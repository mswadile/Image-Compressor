// Generated by view binder compiler. Do not edit!
package com.example.imagecompressor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.imagecompressor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button comBtn;

  @NonNull
  public final ImageButton comImg;

  @NonNull
  public final Button exBtn;

  @NonNull
  public final ImageButton exImg;

  @NonNull
  public final TextView mainTtl;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull Button comBtn,
      @NonNull ImageButton comImg, @NonNull Button exBtn, @NonNull ImageButton exImg,
      @NonNull TextView mainTtl) {
    this.rootView = rootView;
    this.comBtn = comBtn;
    this.comImg = comImg;
    this.exBtn = exBtn;
    this.exImg = exImg;
    this.mainTtl = mainTtl;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comBtn;
      Button comBtn = ViewBindings.findChildViewById(rootView, id);
      if (comBtn == null) {
        break missingId;
      }

      id = R.id.comImg;
      ImageButton comImg = ViewBindings.findChildViewById(rootView, id);
      if (comImg == null) {
        break missingId;
      }

      id = R.id.exBtn;
      Button exBtn = ViewBindings.findChildViewById(rootView, id);
      if (exBtn == null) {
        break missingId;
      }

      id = R.id.exImg;
      ImageButton exImg = ViewBindings.findChildViewById(rootView, id);
      if (exImg == null) {
        break missingId;
      }

      id = R.id.mainTtl;
      TextView mainTtl = ViewBindings.findChildViewById(rootView, id);
      if (mainTtl == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, comBtn, comImg, exBtn, exImg,
          mainTtl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
