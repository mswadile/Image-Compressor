warning: LF will be replaced by CRLF in app/src/main/java/com/example/imagecompressor/MainActivity.java.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in app/src/main/res/layout/activity_main.xml.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in app/src/main/res/values/strings.xml.
The file will have its original line endings in your working directory
[1mdiff --git a/app/src/main/java/com/example/imagecompressor/MainActivity.java b/app/src/main/java/com/example/imagecompressor/MainActivity.java[m
[1mindex 3360965..218c99b 100644[m
[1m--- a/app/src/main/java/com/example/imagecompressor/MainActivity.java[m
[1m+++ b/app/src/main/java/com/example/imagecompressor/MainActivity.java[m
[36m@@ -11,6 +11,7 @@[m [mimport androidx.activity.result.ActivityResultLauncher;[m
 import androidx.activity.result.contract.ActivityResultContracts;[m
 import androidx.appcompat.app.AppCompatActivity;[m
 [m
[32m+[m[32mimport android.view.View;[m
 import android.widget.Button;[m
 import android.widget.ImageView;[m
 import android.widget.Toast;[m
[36m@@ -45,45 +46,8 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
             imageResultLauncher.launch(intent);[m
         });[m
 [m
[31m-        //Onclik listener for compress button[m
[31m-        compressBtn.setOnClickListener(view -> {[m
[31m-            HashMap<Integer,Double> pixmap = new HashMap<Integer,Double>();[m
[31m-            if(!selected){[m
[31m-                Toast msg  = Toast.makeText(getApplicationContext(),"Please select Image First",Toast.LENGTH_SHORT);[m
[31m-                msg.show();[m
[31m-            }else{[m
[31m-                int height = bmap.getHeight();[m
[31m-                int width = bmap.getWidth();[m
[31m-                long numPix = (long) height * width;[m
[31m-                for(int i=0;i<height;i++) {[m
[31m-                    for (int j = 0; j < width; j++) {[m
[31m-                        int pixel = bmap.getPixel(j, i);[m
[31m-                        if (pixmap.containsKey(pixel)) {[m
[31m-                            double tempPix = pixmap.get(pixel);[m
[31m-                            tempPix++;[m
[31m-                            pixmap.replace(pixel, tempPix);[m
[31m-                        } else {[m
[31m-                            pixmap.put(pixel, 1.0);[m
[31m-                        }[m
[31m-                    }[m
[31m-                }[m
[31m-[m
[31m-                /* calculate probability of each pixel occurence[m
[31m-                 prob_pixel = numpix/totalnum_pixels[m
[31m-                 prob_pixel == probability of occurence of certain pixel[m
[31m-                 numpix == number of times pixel repeated[m
[31m-                 totalnum_pixels == total number of pixels in image[m
[31m-                 */[m
[31m-[m
[31m-                for(Map.Entry<Integer,Double> tMapE : pixmap.entrySet()) {[m
[31m-                    pixmap.replace(tMapE.getKey(),tMapE.getValue()/numPix);[m
[31m-                }[m
[31m-[m
[31m-                // Build a huffman tree[m
[31m-[m
[31m-[m
[31m-            }[m
[31m-        });[m
[32m+[m[32m        //Onclick listener for compress button[m
[32m+[m[32m        compressBtn.setOnClickListener(this::onClick);[m
 [m
     }[m
 [m
[36m@@ -108,4 +72,43 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
     );[m
 [m
 [m
[32m+[m[32m    private void onClick(View view) {[m
[32m+[m[32m        HashMap<Integer, Double> pixmap = new HashMap<>();[m
[32m+[m[32m        if (!selected) {[m
[32m+[m[32m            Toast msg = Toast.makeText(getApplicationContext(), "Please select Image First", Toast.LENGTH_SHORT);[m
[32m+[m[32m            msg.show();[m
[32m+[m[32m        } else {[m
[32m+[m[32m            int height = bmap.getHeight();[m
[32m+[m[32m            int width = bmap.getWidth();[m
[32m+[m[32m            long numPix = (long) height * width;[m
[32m+[m[32m            for (int i = 0; i < height; i++) {[m
[32m+[m[32m                for (int j = 0; j < width; j++) {[m
[32m+[m[32m                    int pixel = bmap.getPixel(j, i);[m
[32m+[m[32m                    if (pixmap.containsKey(pixel)) {[m
[32m+[m[32m                        double tempPix;[m
[32m+[m[32m                        tempPix = pixmap.get(pixel);[m
[32m+[m[32m                        tempPix++;[m
[32m+[m[32m                        pixmap.replace(pixel, tempPix);[m
[32m+[m[32m                    } else {[m
[32m+[m[32m                        pixmap.put(pixel, 1.0);[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            /* calculate probability of each pixel occurence[m
[32m+[m[32m             prob_pixel = numpix/totalnum_pixels[m
[32m+[m[32m             prob_pixel == probability of occurence of certain pixel[m
[32m+[m[32m             numpix == number of times pixel repeated[m
[32m+[m[32m             totalnum_pixels == total number of pixels in image[m
[32m+[m[32m             */[m
[32m+[m
[32m+[m[32m            for (Map.Entry<Integer, Double> tMapE : pixmap.entrySet()) {[m
[32m+[m[32m                pixmap.replace(tMapE.getKey(), tMapE.getValue() / numPix);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            // Build a huffman tree[m
[32m+[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml[m
[1mindex aee4a10..601cdb2 100644[m
[1m--- a/app/src/main/res/layout/activity_main.xml[m
[1m+++ b/app/src/main/res/layout/activity_main.xml[m
[36m@@ -1,6 +1,5 @@[m
 <?xml version="1.0" encoding="utf-8"?>[m
 <androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-    xmlns:app="http://schemas.android.com/apk/res-auto"[m
     xmlns:tools="http://schemas.android.com/tools"[m
     android:layout_width="match_parent"[m
     android:layout_height="match_parent"[m
[36m@@ -27,7 +26,8 @@[m
             android:layout_width="200dp"[m
             android:layout_height="200dp"[m
             android:layout_gravity="center_horizontal"[m
[31m-            tools:srcCompat="@tools:sample/backgrounds/scenic" />[m
[32m+[m[32m            tools:srcCompat="@tools:sample/backgrounds/scenic"[m
[32m+[m[32m            android:contentDescription="@string/img_dsr" />[m
 [m
         <TextView[m
             android:id="@+id/belowImgTxt"[m
[36m@@ -90,6 +90,7 @@[m
             android:id="@+id/button2"[m
             android:layout_width="match_parent"[m
             android:layout_height="wrap_content"[m
[32m+[m[32m            android:layout_marginTop="10dp"[m
             android:text="@string/extract" />[m
     </LinearLayout>[m
 </androidx.coordinatorlayout.widget.CoordinatorLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml[m
[1mindex 58b781a..f0aeff7 100644[m
[1m--- a/app/src/main/res/values/strings.xml[m
[1m+++ b/app/src/main/res/values/strings.xml[m
[36m@@ -8,4 +8,5 @@[m
     <string name="upload">Upload</string>[m
     <string name="compress">Compress</string>[m
     <string name="extract">Extract</string>[m
[32m+[m[32m    <string name="img_dsr">Uploaded Image</string>[m
 </resources>[m
\ No newline at end of file[m
